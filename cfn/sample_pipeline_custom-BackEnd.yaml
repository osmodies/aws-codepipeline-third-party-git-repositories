AWSTemplateFormatVersion: 2010-09-09
Description: 3rd party git integration with CodePipeline
Metadata:
  LICENSE: >-
    Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.

    Permission is hereby granted, free of charge, to any person obtaining a copy of this
    software and associated documentation files (the "Software"), to deal in the Software
    without restriction, including without limitation the rights to use, copy, modify,
    merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
    INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
Parameters:
  EnvironmentName:
    Type: String
    Default: "dev"
    Description: "Name of the Environment"
  Branch:
    Description: 'Git branch to pull.'
    Type: String
    Default: 'main'
  GitUrl:
    Description: URL for git pull
    Type: String
    Default: 'git@gitlab.com:myfirtsdemo/myfirstdemo.git'
  SourceActionVersion:
    Description: The version of the custom source action to use.
    Type: String
    Default: '1'
  SourceActionProvider:
    Description: The provider name of the custom source action.
    Type: String
    Default: 'CustomSourceForGit'
  CodePipelineName:
    Description: Name for CodePipeline.
    Type: String
    Default: thirdpartygitsource-sample-odiaz
  SecretsManagerArnForSSHPrivateKey:
    Description: SSH Private Key for Git Repo Access that was added in the AWS Secrets Manager.
    Type: String
    NoEcho: 'true'
  GitLabWebhookToken:
    Description: Git WebHook source IP address.
    Type: String
    Default: 'GitLabWebhookToken'
  # GitWebHookIpAddress:
  #   Description: Git WebHook source IP address.
  #   Type: String
  kmsKey:
    Description: ARN kmskey
    Type: String
  ModuleName:
    Type: String
    Default: "module"
    Description: "Name of the module"
  DeployAccount:
    Type: String
    Default: 'XXXXXXXXX'

Resources:
  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /

  CodeBuildPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy with base permissions for CodeBuild
      Path: /
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
              - "logs:PutLogEvents"
              - "logs:CreateLogStream"
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
          - Effect: Allow
            Action:
              - 's3:GetObject'
              - 's3:GetObjectVersion'
              - 's3:GetBucketVersioning'
              - 's3:PutObject'
              - "s3:GetBucketAcl"
              - "s3:GetBucketLocation"
            Resource:
              - !Join ['',['arn:aws:s3:::',!ImportValue S3BucketArtifactsDevopsGitlab, '/*']]
              - !Join ['',['arn:aws:s3:::',!ImportValue S3BucketArtifactsDevopsGitlab]] 
          - Effect: Allow
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey*'
              - 'kms:DescribeKey'
            Resource: !Ref kmsKey
          - Effect: Allow  #For allowing CodeBuild to Access Secrets Manager to retrieve Private SSH key. If a custom KMS key is used, please add the ARN in the Resource section
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey*'
              - 'kms:DescribeKey'
            Resource: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/secretsmanager"
          - Effect: Allow
            Action:
              - 'secretsmanager:GetSecretValue'
            Resource: !Sub "arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"

  buildimage:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: True
        Type: LINUX_CONTAINER
        EnvironmentVariables: 
          - Name: MODULE
            Type: PLAINTEXT
            Value: !Sub '${ModuleName}'
          - Name: ECRREPO
            Type: PLAINTEXT
            Value: !Sub '${DeployAccount}.dkr.ecr.us-east-1.amazonaws.com/${ModuleName}'
          - Name: ENV
            Type: PLAINTEXT
            Value: !Sub '${EnvironmentName}'
          - Name: ACCOUNTID
            Type: PLAINTEXT
            Value: !Sub '${AWS::AccountId}'
          - Name: DEPLOYACC
            Type: PLAINTEXT
            Value: !Sub '${DeployAccount}'
      Name: !Join
              - ""
              - - 'build_image'
                - '-'
                - !Ref Branch
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: ci/BackEnd/buildspec_build_image
      Tags:
      - Key: env
        Value: !Ref Branch
  
  initialization:
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts: 
        Type: CODEPIPELINE
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: True
        Type: LINUX_CONTAINER
        EnvironmentVariables: 
          - Name: BUCKET
            Type: PLAINTEXT
            Value: !ImportValue S3BucketArtifactsDevopsGitlab
          - Name: FOLDER
            Type: PLAINTEXT
            Value: 'XXXXXX/'
      Name: !Join
              - ""
              - - 'initialization'
                - '-'
                - !Ref Branch
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: ci/BackEnd/buildspec_initialization.yml
      Tags:
      - Key: env
        Value: !Ref Branch
  
  UnitIntegrationTest:
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts: 
        Type: CODEPIPELINE
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: True
        Type: LINUX_CONTAINER
        EnvironmentVariables: 
          - Name: BUCKET
            Type: PLAINTEXT
            Value: !ImportValue S3BucketArtifactsDevopsGitlab
          - Name: POSTGRES_HOST
            Type: PLAINTEXT
            Value: "XXXXXXXX"
          - Name: POSTGRES_PORT
            Type: PLAINTEXT
            Value: "XXXXXXXX"
          - Name: POSTGRES_USER
            Type: PLAINTEXT
            Value: "XXXXXXXX"
          - Name: POSTGRES_PASSWORD
            Type: PLAINTEXT
            Value: "XXXXXXXX"
          - Name: POSTGRES_DB
            Type: PLAINTEXT
            Value: "XXXXXXXX"          
      Name: !Join
              - ""
              - - 'unit_integration_test'
                - '-'
                - !Ref Branch
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: ci/BackEnd/buildspec_unit_integration_test.yml
      Tags:
      - Key: env
        Value: !Ref Branch
  
  SonarqubeCheck:
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts: 
        Type: CODEPIPELINE
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: True
        Type: LINUX_CONTAINER
        EnvironmentVariables: 
          - Name: BUCKET
            Type: PLAINTEXT
            Value: !ImportValue S3BucketArtifactsDevopsGitlab
      Name: !Join
              - ""
              - - 'sonarqube-check'
                - '-'
                - !Ref Branch
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: ci/BackEnd/buildspec_sonarqube-check
      Tags:
      - Key: env
        Value: !Ref Branch
  
  QaAutomation:
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts: 
        Type: CODEPIPELINE
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: True
        Type: LINUX_CONTAINER
        EnvironmentVariables: 
          - Name: BUCKET
            Type: PLAINTEXT
            Value: !ImportValue S3BucketArtifactsDevopsGitlab
      Name: !Join
              - ""
              - - 'qa_automation'
                - '-'
                - !Ref Branch
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: ci/BackEnd/buildspec_qa_automation.yml
      Tags:
      - Key: env
        Value: !Ref Branch
  
  PipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /

  CodePipelinePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy with base permissions for CodePipeline
      Path: /
      Roles:
        - !Ref PipelineRole
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
            - 's3:GetObject'
            - 's3:GetObjectVersion'
            - 's3:GetBucketVersioning'
            - 's3:PutObject'
            - "s3:GetBucketAcl"
            - "s3:GetBucketLocation"
          Resource:
            - !Join ['',['arn:aws:s3:::',!ImportValue S3BucketArtifactsDevopsGitlab, '/*']]
            - !Join ['',['arn:aws:s3:::',!ImportValue S3BucketArtifactsDevopsGitlab]] 
          Effect: Allow
        - Action:
            - 'iam:PassRole'
          Resource: '*'
          Effect: Allow
        - Action:
            - 'codebuild:BatchGetBuilds'
            - 'codebuild:StartBuild'
          Resource: '*'
          Effect: Allow
        - Action:
          - 'kms:Encrypt'
          - 'kms:Decrypt'
          - 'kms:ReEncrypt*'
          - 'kms:GenerateDataKey*'
          - 'kms:DescribeKey'
          Resource: !Ref kmsKey
          Effect: Allow
        - Action:
            - 'secretsmanager:GetSecretValue'
          Resource: !Ref SecretsManagerArnForSSHPrivateKey
          Effect: Allow
        Version: 2012-10-17

  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Type: S3
        Location: !ImportValue S3BucketArtifactsDevopsGitlab
        EncryptionKey:
          Id: !Ref kmsKey
          Type: KMS
      Name: !Sub '${CodePipelineName}-${Branch}' #Name: !Ref CodePipelineName
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: 'Source'
          Actions:
            - Name: 'Source'
              ActionTypeId:
                Category: 'Source'
                Owner: 'Custom'
                Version: !Ref SourceActionVersion
                Provider: !Ref SourceActionProvider
              OutputArtifacts:
                - Name: source-output-artifacts
              Configuration:
                Branch: !Ref Branch
                GitUrl: !Ref GitUrl
                PipelineName: !Ref CodePipelineName
                SSHSecretKeyName: !Ref SecretsManagerArnForSSHPrivateKey
              RunOrder: 1
        - Name: 'initialization'
          Actions:
            - Name: 'initialization'
              ActionTypeId:
                Category: 'Build'
                Owner: 'AWS'
                Version: '1'
                Provider: 'CodeBuild'
              InputArtifacts:
                - Name: source-output-artifacts
              OutputArtifacts:
                - Name: initialization-output-artifacts
              Configuration:
                ProjectName: !Ref initialization
              RunOrder: 1
        - Name: 'dev_testing'
          Actions:
            - Name: 'dev_testing'
              ActionTypeId:
                Category: 'Build'
                Owner: 'AWS'
                Version: '1'
                Provider: 'CodeBuild'
              InputArtifacts:
                - Name: source-output-artifacts
              OutputArtifacts:
                - Name: Quality-output-artifacts
              Configuration:
                ProjectName: !Ref UnitIntegrationTest
              RunOrder: 1
        - Name: 'quality'
          Actions:
            - Name: 'qa_automation'
              ActionTypeId:
                Category: 'Build'
                Owner: 'AWS'
                Version: '1'
                Provider: 'CodeBuild'
              InputArtifacts:
                - Name: source-output-artifacts
              OutputArtifacts:
                - Name: qa_automation-output-artifacts
              Configuration:
                ProjectName: !Ref QaAutomation
              RunOrder: 1
            - Name: 'sonarqube-check'
              ActionTypeId:
                Category: 'Build'
                Owner: 'AWS'
                Version: '1'
                Provider: 'CodeBuild'
              InputArtifacts:
                - Name: source-output-artifacts
              OutputArtifacts:
                - Name: Sonar-check-output-artifacts
              Configuration:
                ProjectName: !Ref SonarqubeCheck
              RunOrder: 1
        - Name: 'Build-Push'
          Actions:            
            - Name: 'build_image'
              ActionTypeId:
                Category: 'Build'
                Owner: 'AWS'
                Version: '1'
                Provider: 'CodeBuild'
              InputArtifacts:
                - Name: source-output-artifacts
              OutputArtifacts:
                - Name: build-output-artifacts
              Configuration:
                ProjectName: !Ref buildimage
              RunOrder: 1       
        - Name: 'deploy_ecs'
          Actions:            
            - Name: DeployAPI
              # RoleArn: !Sub 'arn:aws:iam::${DeployAccount}:role/CodePipeline-Cross-Account-Role-Access'
              InputArtifacts:
                - Name: build-output-artifacts
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName: !Sub 'name-ecs-cluster-${EnvironmentName}'
                ServiceName: !Ref ModuleName
              RunOrder: 2                                  
  PipelineWebhook:
    Type: "AWS::CodePipeline::Webhook"
    Properties:
      TargetPipeline: !Ref Pipeline
      TargetPipelineVersion: 1
      TargetAction: Source
      Filters:
        - JsonPath: '$.ref'
          MatchEquals: 'refs/heads/{Branch}'
      Authentication: UNAUTHENTICATED
      AuthenticationConfiguration:
        AllowedIPRange: !Ref AWS::NoValue       
      RegisterWithThirdParty: false
          

  # ArtifactStoreBucket:
  #   DeletionPolicy: Retain
  #   Type: 'AWS::S3::Bucket'
  #   Properties:
  #     VersioningConfiguration:
  #       Status: Enabled

  # KMSKey:
  #   Type: 'AWS::KMS::Key'
  #   Properties:
  #     Description: 'git CodePipeline integration, bucket to store ssh keys'
  #     KeyPolicy:
  #       Version: 2012-10-17
  #       Statement:
  #         - Sid: Allow access for Key Administrators
  #           Effect: Allow
  #           Principal:
  #             AWS:
  #               - !Join
  #                 - ''
  #                 - - 'arn:aws:iam::'
  #                   - !Ref 'AWS::AccountId'
  #                   - ':root'
  #           Action:
  #             - 'kms:Create*'
  #             - 'kms:Describe*'
  #             - 'kms:Enable*'
  #             - 'kms:List*'
  #             - 'kms:Put*'
  #             - 'kms:Update*'
  #             - 'kms:Revoke*'
  #             - 'kms:Disable*'
  #             - 'kms:Get*'
  #             - 'kms:Delete*'
  #             - 'kms:ScheduleKeyDeletion'
  #             - 'kms:CancelKeyDeletion'
  #           Resource: '*'
  #         - Sid: Allow use of the key
  #           Effect: Allow
  #           Principal:
  #             AWS:
  #               - !GetAtt CodeBuildRole.Arn
  #               - !GetAtt PipelineRole.Arn
  #           Action:
  #             - 'kms:Encrypt'
  #             - 'kms:Decrypt'
  #             - 'kms:ReEncrypt*'
  #             - 'kms:GenerateDataKey*'
  #             - 'kms:DescribeKey'
  #           Resource: '*'

Outputs:
  CodePipelineWebHookUrl:
    Value: !GetAtt PipelineWebhook.Url
